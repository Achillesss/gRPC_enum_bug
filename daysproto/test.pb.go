// Code generated by protoc-gen-go.
// source: test.proto
// DO NOT EDIT!

/*
Package weekDay is a generated protocol buffer package.

It is generated from these files:
	test.proto

It has these top-level messages:
	Day
	DayResponse
*/
package weekDay

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type Day_WeekDay int32

const (
	Day_Monday   Day_WeekDay = 0
	Day_Tuesday  Day_WeekDay = 1
	Day_Thursday Day_WeekDay = 2
	Day_Wensday  Day_WeekDay = 3
	Day_Friday   Day_WeekDay = 4
	Day_Saturday Day_WeekDay = 5
	Day_Sunday   Day_WeekDay = 6
)

var Day_WeekDay_name = map[int32]string{
	0: "Monday",
	1: "Tuesday",
	2: "Thursday",
	3: "Wensday",
	4: "Friday",
	5: "Saturday",
	6: "Sunday",
}
var Day_WeekDay_value = map[string]int32{
	"Monday":   0,
	"Tuesday":  1,
	"Thursday": 2,
	"Wensday":  3,
	"Friday":   4,
	"Saturday": 5,
	"Sunday":   6,
}

func (x Day_WeekDay) String() string {
	return proto.EnumName(Day_WeekDay_name, int32(x))
}
func (Day_WeekDay) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

type Day struct {
	Day Day_WeekDay `protobuf:"varint,1,opt,name=day,enum=weekDay.Day_WeekDay" json:"day,omitempty"`
}

func (m *Day) Reset()                    { *m = Day{} }
func (m *Day) String() string            { return proto.CompactTextString(m) }
func (*Day) ProtoMessage()               {}
func (*Day) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type DayResponse struct {
	IsWeekDay bool `protobuf:"varint,1,opt,name=isWeekDay" json:"isWeekDay,omitempty"`
}

func (m *DayResponse) Reset()                    { *m = DayResponse{} }
func (m *DayResponse) String() string            { return proto.CompactTextString(m) }
func (*DayResponse) ProtoMessage()               {}
func (*DayResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*Day)(nil), "weekDay.Day")
	proto.RegisterType((*DayResponse)(nil), "weekDay.DayResponse")
	proto.RegisterEnum("weekDay.Day_WeekDay", Day_WeekDay_name, Day_WeekDay_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion2

// Client API for GetWeekDayService service

type GetWeekDayServiceClient interface {
	GetWeekDay(ctx context.Context, in *Day, opts ...grpc.CallOption) (*DayResponse, error)
}

type getWeekDayServiceClient struct {
	cc *grpc.ClientConn
}

func NewGetWeekDayServiceClient(cc *grpc.ClientConn) GetWeekDayServiceClient {
	return &getWeekDayServiceClient{cc}
}

func (c *getWeekDayServiceClient) GetWeekDay(ctx context.Context, in *Day, opts ...grpc.CallOption) (*DayResponse, error) {
	out := new(DayResponse)
	err := grpc.Invoke(ctx, "/weekDay.GetWeekDayService/GetWeekDay", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GetWeekDayService service

type GetWeekDayServiceServer interface {
	GetWeekDay(context.Context, *Day) (*DayResponse, error)
}

func RegisterGetWeekDayServiceServer(s *grpc.Server, srv GetWeekDayServiceServer) {
	s.RegisterService(&_GetWeekDayService_serviceDesc, srv)
}

func _GetWeekDayService_GetWeekDay_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Day)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetWeekDayServiceServer).GetWeekDay(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/weekDay.GetWeekDayService/GetWeekDay",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetWeekDayServiceServer).GetWeekDay(ctx, req.(*Day))
	}
	return interceptor(ctx, in, info, handler)
}

var _GetWeekDayService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "weekDay.GetWeekDayService",
	HandlerType: (*GetWeekDayServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetWeekDay",
			Handler:    _GetWeekDayService_GetWeekDay_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 209 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x49, 0x2d, 0x2e,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2f, 0x4f, 0x4d, 0xcd, 0x76, 0x49, 0xac, 0x54,
	0xea, 0x65, 0xe4, 0x62, 0x06, 0xd2, 0x42, 0x8a, 0x5c, 0xcc, 0x29, 0x89, 0x95, 0x12, 0x8c, 0x0a,
	0x8c, 0x1a, 0x7c, 0x46, 0x22, 0x7a, 0x50, 0x69, 0x3d, 0x10, 0x0e, 0x87, 0x2a, 0x4d, 0xe6, 0x62,
	0x87, 0x32, 0x85, 0xb8, 0xb8, 0xd8, 0x7c, 0xf3, 0xf3, 0x80, 0x1a, 0x04, 0x18, 0x84, 0xb8, 0xb9,
	0xd8, 0x43, 0x4a, 0x53, 0x8b, 0x41, 0x1c, 0x46, 0x21, 0x1e, 0x2e, 0x8e, 0x90, 0x8c, 0xd2, 0x22,
	0x30, 0x8f, 0x09, 0x24, 0x15, 0x9e, 0x9a, 0x07, 0xe6, 0x30, 0x83, 0xf4, 0xb8, 0x15, 0x65, 0x82,
	0xd8, 0x2c, 0x20, 0x65, 0xc1, 0x89, 0x25, 0xa5, 0x45, 0x20, 0x1e, 0x2b, 0x48, 0x26, 0xb8, 0x14,
	0x6c, 0x1a, 0x9b, 0x92, 0x02, 0x17, 0x37, 0xd0, 0x82, 0xa0, 0xd4, 0xe2, 0x82, 0xfc, 0xbc, 0xe2,
	0x54, 0x21, 0x41, 0x2e, 0xce, 0xcc, 0x62, 0xa8, 0xad, 0x60, 0xc7, 0x71, 0x18, 0xb9, 0x73, 0x09,
	0xba, 0xa7, 0x96, 0x40, 0xc5, 0x82, 0x53, 0x8b, 0xca, 0x32, 0x93, 0x53, 0x85, 0x8c, 0xb8, 0xb8,
	0x10, 0x82, 0x42, 0x3c, 0xc8, 0xee, 0x97, 0x42, 0xf1, 0x0d, 0xcc, 0x64, 0x25, 0x86, 0x24, 0x36,
	0x70, 0x50, 0x18, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x3e, 0xcb, 0x77, 0x6c, 0x18, 0x01, 0x00,
	0x00,
}
